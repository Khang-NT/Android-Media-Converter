buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        //noinspection GradleDynamicVersion
        classpath 'io.fabric.tools:gradle:1.+'
    }
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

def keyStorePass = hasProperty("key_store_password") ? key_store_password : ""

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.github.khangnt.mcp"
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 1
        versionName "0.7.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            keyAlias 'MediaConverter'
            keyPassword keyStorePass
            storeFile file('release_key.jks')
            storePassword keyStorePass
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".dev"
            signingConfig signingConfigs.debug

            ext.enableCrashlytics = false
        }

        release {
            signingConfig signingConfigs.release

            shrinkResources true
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    final _versionCode = 20

    flavorDimensions 'cpuArch'
    productFlavors {
        arm {
            dimension 'cpuArch'
            ndk {
                abiFilter 'armeabi'
            }

            versionCode 0 + _versionCode
            versionNameSuffix "-arm"
        }
        arm7 {
            dimension 'cpuArch'
            ndk {
                abiFilter 'armeabi-v7a'
            }

            versionCode 10000 + _versionCode
            versionNameSuffix "-arm7"
        }
        arm8 {
            dimension 'cpuArch'
            ndk {
                abiFilters 'arm64-v8a'
            }

            versionCode 20000 + _versionCode
            versionNameSuffix "-arm8"
        }
        x86 {
            dimension 'cpuArch'
            ndk {
                abiFilter 'x86'
            }

            versionCode 30000 + _versionCode
            versionNameSuffix "-x86"
        }
        x86_64 {
            dimension 'cpuArch'
            ndk {
                abiFilter 'x86_64'
            }

            versionCode 40000 + _versionCode
            versionNameSuffix "-x86_64"
        }
        mips {
            dimension 'cpuArch'
            ndk {
                abiFilter 'mips'
            }

            versionCode 50000 + _versionCode
            versionNameSuffix "-mips"
        }
        mips64 {
            dimension 'cpuArch'
            ndk {
                abiFilter 'mips64'
            }

            versionCode 60000 + _versionCode
            versionNameSuffix "-mips64"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    final supportLibVersion = '27.0.2'
    implementation "com.android.support:appcompat-v7:$supportLibVersion"
    implementation "com.android.support:cardview-v7:$supportLibVersion"
    implementation "com.android.support:design:$supportLibVersion"

    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'io.reactivex.rxjava2:rxjava:2.1.8'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'

    implementation 'com.squareup.okhttp3:okhttp:3.9.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    implementation 'com.jakewharton.timber:timber:4.6.0'

    implementation 'de.psdev.licensesdialog:licensesdialog:1.8.3'

    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true
    }

    implementation 'com.liulishuo.filedownloader:library:1.7.1'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
}

apply from: 'publish.gradle'

publishConfig {
    packageName = 'com.github.khangnt.mcp'
    track = 'beta'
    apkFiles = files(
            "$buildDir/outputs/apk/arm/release/app-arm-release.apk",
            "$buildDir/outputs/apk/arm7/release/app-arm7-release.apk",
            "$buildDir/outputs/apk/arm8/release/app-arm8-release.apk",
            "$buildDir/outputs/apk/mips/release/app-mips-release.apk",
            "$buildDir/outputs/apk/mips64/release/app-mips64-release.apk",
            "$buildDir/outputs/apk/x86/release/app-x86-release.apk",
            "$buildDir/outputs/apk/x86_64/release/app-x86_64-release.apk",
    )
    serviceAccountJson = 'app/service_account.json'
}

afterEvaluate {
    tasks.create("testReleaseUnitTest").dependsOn(
            "testArmReleaseUnitTest",
            "testArm7ReleaseUnitTest",
            "testArm8ReleaseUnitTest",
            "testX86ReleaseUnitTest",
            "testX86_64ReleaseUnitTest",
            "testMipsReleaseUnitTest",
            "testMips64ReleaseUnitTest"
    )
    tasks.create("lintRelease").dependsOn(
            "lintArmRelease",
            "lintArm7Release",
            "lintArm8Release",
            "lintX86Release",
            "lintX86_64Release",
            "lintMipsRelease",
            "lintMips64Release"
    )
}